{% comment %}
---------------------------------------------------------
Copyright Â© 2023 Section Store. All rights reserved.
Unauthorized copying, modification, distribution, or use
of this code or any portion of it, is strictly prohibited.
Violators will be prosecuted to the fullest extent of the law.
For inquiries or permissions, contact daniel@section.store
---------------------------------------------------------
{% endcomment %}

{%- liquid 
  assign padding_horizontal = section.settings.padding_horizontal
  assign padding_horizontal_mobile = section.settings.padding_horizontal_mobile
  assign padding_top = section.settings.padding_top
  assign padding_bottom = section.settings.padding_bottom
  assign border_color = section.settings.border_color
  assign border_thickness = section.settings.border_thickness
  assign margin_top = section.settings.margin_top
  assign margin_bottom = section.settings.margin_bottom
  assign margin_horizontal_mobile = section.settings.margin_horizontal_mobile
  assign margin_horizontal = section.settings.margin_horizontal
  assign background_color = section.settings.background_color
  assign background_gradient = section.settings.background_gradient
  assign full_width = section.settings.full_width
  assign content_width = section.settings.content_width
  assign lazy = section.settings.lazy
  assign section_radius = section.settings.section_radius

  assign layout = section.settings.layout
  assign layout_mobile = section.settings.layout_mobile
  assign layout_height = section.settings.layout_height
  assign layout_fixed_height = section.settings.layout_fixed_height
  assign layout_gap = section.settings.layout_gap
  assign layout_gap_mobile = section.settings.layout_gap_mobile

  assign image = section.settings.image
  assign image_width = section.settings.image_width
  assign image_radius = section.settings.image_radius
  assign image_border_thickness = section.settings.image_border_thickness
  assign image_border_color = section.settings.image_border_color
  assign image_ratio_mobile = section.settings.image_ratio_mobile

  assign content_padding_horizontal = section.settings.content_padding_horizontal
  assign content_padding_horizontal_mobile = section.settings.content_padding_horizontal_mobile
  assign content_padding_vertical = section.settings.content_padding_vertical
  assign content_padding_vertical_mobile = section.settings.content_padding_vertical_mobile
  assign content_radius = section.settings.content_radius
  assign content_border_thickness = section.settings.content_border_thickness
  assign content_border_color = section.settings.content_border_color
  assign content_bg_color = section.settings.content_bg_color
  assign content_align = section.settings.content_align
  assign content_align_mobile = section.settings.content_align_mobile
  assign content_vertical_align = section.settings.content_vertical_align

  assign content_horizontal_align = ""
  if content_align == "center"
    assign content_horizontal_align = "center"
  elsif content_align == "right"
    assign content_horizontal_align = "end"
  else
    assign content_horizontal_align = "start"
  endif

  assign content_horizontal_align_mobile = ""
  if content_align_mobile == "center"
    assign content_horizontal_align_mobile = "center"
  elsif content_align_mobile == "right"
    assign content_horizontal_align_mobile = "end"
  else
    assign content_horizontal_align_mobile = "start"
  endif
-%}

{%- style -%}
  
  .section-{{ section.id }} {
    border-top: solid {{ border_color }} {{ border_thickness }}px;
    border-bottom: solid {{ border_color }} {{ border_thickness }}px;
    margin-top: {{ margin_top | times: 0.75 | round: 0 }}px;
    margin-bottom: {{ margin_bottom | times: 0.75 | round: 0 }}px;
    margin-left: {{ margin_horizontal_mobile }}rem;
    margin-right: {{ margin_horizontal_mobile }}rem;
    border-radius: {{ section_radius | times: 0.6 | round: 0 }}px;
    overflow: hidden;
  } 
  
  .section-{{ section.id }}-settings {
    margin: 0 auto;
    padding-top: {{ padding_top | times: 0.75 | round: 0 }}px;
    padding-bottom: {{ padding_bottom | times: 0.75 | round: 0 }}px;
    padding-left: {{ padding_horizontal_mobile }}rem;
    padding-right: {{ padding_horizontal_mobile }}rem;
    height: 100%;
  }

  .hero-body-{{ section.id }} {
    position: relative;
    display: grid;
    grid-template-columns: 1fr;
    gap: {{ layout_gap_mobile }}px;
    height: 100%;
  }

  .hero-content-{{ section.id }} {
    grid-area: content;
    display: flex;
    flex-direction: column;
    position: relative;
    justify-content: {{ content_vertical_align }};
    align-items: {{ content_horizontal_align_mobile }};
    padding: {{ content_padding_vertical_mobile }}px {{ content_padding_horizontal_mobile }}px;
    border: {{ content_border_thickness }}px solid {{ content_border_color }};
    border-radius: {{ content_radius }}px;
    overflow: hidden;
    background-color: {{ content_bg_color }};
  }

  .hero-image-{{ section.id }} {
    grid-area: image;
    border: {{ image_border_thickness }}px solid {{ image_border_color }};
    border-radius: {{ image_radius }}px;
    overflow: hidden;
  }

  .hero-image-{{ section.id }} img,
  .hero-image-{{ section.id }} svg {
    display: block;
    width: 100%;
    height: 100%;
    object-fit:cover;
  }

  .hero-image-{{ section.id }} svg {
    background-color: #AFAFAF;
  }
  
  @media(min-width: 1024px) {

    .section-{{ section.id }} {
      margin-top: {{ margin_top }}px;
      margin-bottom: {{ margin_bottom }}px;
      margin-left: {{ margin_horizontal }}rem;
      margin-right: {{ margin_horizontal }}rem;
      border-radius: {{ section_radius }}px;
    }
    
    .section-{{ section.id }}-settings {
      padding: 0 5rem;
      padding-top: {{ padding_top }}px;
      padding-bottom: {{ padding_bottom }}px;
      padding-left: {{ padding_horizontal }}rem;
      padding-right: {{ padding_horizontal }}rem;
    }

    .hero-content-{{ section.id }} {
      padding: {{ content_padding_vertical }}px {{ content_padding_horizontal }}px;
      align-items: {{ content_horizontal_align }};
    }

    .hero-body-{{ section.id }} {
      grid-template-columns: auto {{ image_width }}%;
      gap: {{ layout_gap }}px;
    }
  }
  
{%- endstyle -%}

{% unless full_width %}
  <style>
    .section-{{ section.id }}-settings {
      max-width: {{ content_width }}px;
    }
  </style>
{% endunless %}

{% if margin_horizontal_mobile > 0 %}
  <style>
    .section-{{ section.id }} {
      border-left: solid {{ border_color }} {{ border_thickness }}px;
      border-right: solid {{ border_color }} {{ border_thickness }}px;
    }
    
    @media(min-width: 1024px) {
      .section-{{ section.id }} {
        border-left: 0px;
        border-right: 0px;
      }
    }
  </style>
{% endif %}

{% if margin_horizontal > 0 %}
  <style>
    @media(min-width: 1024px) {
      .section-{{ section.id }} {
        border-left: solid {{ border_color }} {{ border_thickness }}px;
        border-right: solid {{ border_color }} {{ border_thickness }}px;
      }
    }
  </style>
{% endif %}

{% if layout_height == "full_screen" %}
  <style>

    .hero-{{ section.id }} {
      height: 100%;
    }

    @media(min-width: 1024px) {      

      .hero-{{ section.id }} {
        height: 95vh;
      }
    }
  </style>
{% elsif layout_height == 'fixed_height' %}  
  <style>      
    .hero-{{ section.id }} {
      height: 100%;
    }

    @media(min-width: 1024px) {
      .hero-{{ section.id }} {
        height: {{ layout_fixed_height }}px;
      }
    }
  </style>
{% endif %}

{% if layout_mobile == 'content_image'%}
  <style>
    .hero-body-{{ section.id }} {
      grid-template-areas: 
        "content"
        "image";     
    }
  </style>
{% elsif layout_mobile == 'image_content' %}
  <style>
    .hero-body-{{ section.id }} {
      grid-template-areas: 
        "image"
        "content";     
    }
  </style>
{% endif %}

{% if layout == 'content_image'%}
  <style>
    @media(min-width: 1024px) {
      .hero-body-{{ section.id }} {
        grid-template-areas: "content image";    
      }
    }    
  </style>
{% elsif layout == 'image_content' %}
  <style>
    @media(min-width: 1024px) {
      .hero-body-{{ section.id }} {
        grid-template-areas: "image content";   
      }
    }   
  </style>
{% endif %}

{% if image_ratio_mobile == "portrait" %}
  <style>
    .hero-image-{{ section.id }} {
     aspect-ratio: 9.6/12; 
    }
  </style>
{% elsif image_ratio_mobile == "landscape" %}
  <style>
    .hero-image-{{ section.id }}{
     aspect-ratio: 12/9; 
    }
  </style>
{% elsif image_ratio_mobile == "square" %}
  <style>
    .hero-image-{{ section.id }} {
     aspect-ratio: 12/12; 
    }
  </style>
{% else %}
  <style>
    .hero-image-{{ section.id }} {
     aspect-ratio: auto; 
    }
  </style>
{% endif %}

{% if image_ratio_mobile == "portrait" %}
  <style>
    @media(min-width: 1024px) {
     .hero-image-{{ section.id }} {
       aspect-ratio: auto; 
      } 
    }
  </style>
{% elsif image_ratio_mobile == "landscape" %}
  <style>
    @media(min-width: 1024px) {
      .hero-image-{{ section.id }}{
       aspect-ratio: auto; 
      }
    }
  </style>
{% elsif image_ratio_mobile == "square" %}
  <style>
    @media(min-width: 1024px) {
      .hero-image-{{ section.id }} {
       aspect-ratio: auto; 
      }
    }
  </style>
{% else %}
  <style>
    @media(min-width: 1024px) {
      .hero-image-{{ section.id }} {
       aspect-ratio: auto; 
      }
    }
  </style>
{% endif %}

{% for block in section.blocks %}
  {% case block.type %}
    {% when 'heading' %}  
      <style>
        {{  block.settings.heading_font | font_face: font_display: 'swap' }}

        .hero-heading-{{ block.id }} {
          margin-top: {{ block.settings.heading_mt_mobile }}px;
          text-align: {{ content_horizontal_align_mobile }};
        }
      
        .hero-heading-{{ block.id }} * {
          margin: 0;
          font-size: {{ block.settings.heading_size_mobile }}px;
          color: {{ block.settings.heading_color }};
          line-height: {{ block.settings.heading_height }}%;
          text-transform: unset;
          word-break: break-word;
          font-weight: 700;
        }

        .hero-heading-{{ block.id }} * strong {
          text-decoration: underline {{ block.settings.heading_border_color }};
        }

        @media(min-width: 1024px) {
          
          .hero-heading-{{ block.id }} {
            margin-top: {{ block.settings.heading_mt }}px;
            text-align: {{ content_horizontal_align }};
          }
        
          .hero-heading-{{ block.id }} * {
            font-size: {{ block.settings.heading_size }}px;
          }
        }          
      </style>
        
      {% if block.settings.heading_custom %}
        <style>
          .hero-heading-{{ block.id }} * {
            font-family: {{ block.settings.heading_font.family }}, {{ block.settings.heading_font.fallback_families }};
            font-weight: {{ block.settings.heading_font.weight }};
            font-style: {{ block.settings.heading_font.style }};
          }
        </style>
      {% endif %}

    {% when 'text' %}   
      <style>
        {{  block.settings.text_font | font_face: font_display: 'swap' }}
        
        .hero-text-{{ block.id }} {
          margin-top: {{ block.settings.text_mt_mobile }}px;
          text-align: {{ content_horizontal_align_mobile }};
          position: relative;
          z-index: 2;
        }
      
        .hero-text-{{ block.id }} * {
          margin: 0;
          font-size: {{ block.settings.text_size_mobile }}px;
          color: {{ block.settings.text_color }};
          line-height: {{ block.settings.text_height }}%;
          text-transform: unset;
        }

        @media(min-width: 1024px) {
          
          .hero-text-{{ block.id }} {
            margin-top: {{ block.settings.text_mt }}px;
            text-align: {{  content_horizontal_align }};
          }
      
          .hero-text-{{ block.id }} * {
            font-size: {{ block.settings.text_size }}px;
          }
          
        }
      </style>

      {% if block.settings.text_custom %}
        <style>
          .hero-text-{{ block.id }} * {
            font-family: {{ block.settings.text_font.family }}, {{ block.settings.text_font.fallback_families }};
            font-weight: {{ block.settings.text_font.weight }};
            font-style: {{ block.settings.text_font.style }};
          }
        </style>          
      {% endif %}  

    {% when 'button' %}  
      <style>
        {{  block.settings.button_font | font_face: font_display: 'swap' }}

        .hero-button-{{ block.id }} {
          display: flex;
          align-items: center;
          justify-content: center;
          max-width: fit-content;
          gap: 10px;
          width: 100%;
          margin: 0;         
          font-size: {{ block.settings.button_size_mobile }}px;
          color: {{ block.settings.button_color }};
          line-height: {{ block.settings.button_height }}%;
          text-align: center;
          text-transform: unset;
          text-decoration: none;
          padding: {{ block.settings.button_padding_vertical_mobile }}px {{ block.settings.button_padding_horizontal_mobile }}px;
          border-radius: {{ block.settings.button_radius }}px;
          transition: all 0.3s ease 0s;
          background-color: transparent;
          border: 0px;
          margin-top: {{ block.settings.button_mt_mobile }}px;
          cursor: pointer;
          font-weight: 700;
        }

        .hero-button-inner-{{ block.id }} {
          margin: 0px;
          display: flex;
          align-items: center;
          justify-content: center;
          gap: 10px;
          text-decoration: none;
        }

        .hero-button-{{ block.id }}:hover {
          color: {{ block.settings.button_hover_color }};
          transition: all 0.25s ease 0s;
        }

        .hero-button-{{ block.id }} svg {
          width: 14px;
          height: 14px;
        }

        .hero-button-{{ block.id }} svg path {
          fill: {{ block.settings.button_color }};
          transition: all 0.25s ease 0s;
        }

        .hero-button-{{ block.id }}:hover svg path {
          fill: {{ block.settings.button_hover_color }};
          transition: all 0.25s ease 0s;
        }

        @media (min-width: 1024px) {
          .hero-button-{{ block.id }} {
            margin-top: {{ block.settings.button_mt }}px;
            padding: {{ block.settings.button_padding_vertical }}px {{ block.settings.button_padding_horizontal }}px;
            font-size: {{ block.settings.button_size }}px;
          }
        }
      </style>

      {% if block.settings.use_shadow %}
        <style>
          .hero-button-{{ block.id }}:hover {
            -webkit-box-shadow: 0px 0px 8px 2px {{ block.settings.button_bg_color }};
            -moz-box-shadow: 0px 0px 8px 2px {{ block.settings.button_bg_color }};
            box-shadow: 0px 0px 8px 2px {{ block.settings.button_bg_color }};
          }
        </style>
      {% endif %}  

      {% if block.settings.button_custom %}
        <style>
          .hero-button-{{ block.id }} {
            font-family: {{ block.settings.button_font.family }}, {{ block.settings.button_font.fallback_families }};
            font-weight: {{ block.settings.button_font.weight }};
            font-style: {{ block.settings.button_font.style }};
          }
        </style>
      {% endif %}

      {% if block.settings.button_style == "non_outline" or block.settings.button_style == "non_outline_arrow" %}
        <style>
          .hero-button-{{ block.id }} {
            transition: all 0.3s ease 0s;
            background-color: {{  block.settings.button_bg_color }};
          }
      
          .hero-button-{{ block.id }}:hover {
            transition: all 0.3s ease 0s;
            background-color: {{  block.settings.button_bg_hover_color }};
          }
        </style>
      {% elsif block.settings.button_style == "outline" or block.settings.button_style == "outline_arrow" %}
        <style>          
          .hero-button-{{ block.id }} {
            transition: all 0.3s ease 0s;
            background-color: {{  block.settings.button_bg_color }};
            border: {{  block.settings.button_border_thickness }}px solid {{  block.settings.button_border_color }};
          }
      
          .hero-button-{{ block.id }}:hover {
            transition: all 0.3s ease 0s;
            background-color: {{  block.settings.button_bg_hover_color }};
            border: {{  block.settings.button_border_thickness }}px solid {{ block.settings. button_border_hover_color }};
          }
        </style>
      {% elsif block.settings.button_style == "link" %}
        <style>
          .hero-button-{{ block.id }} {
            padding: 0px !important;
            -webkit-box-shadow: none !important;
            -moz-box-shadow: none !important;
            box-shadow: none !important;
          }
        </style>
      {% endif %}   

    {% when 'circle' %}  
      <style>
        {{  block.settings.text_font | font_face: font_display: 'swap' }}

        .hero-circle-{{ block.id }} {
          position: absolute;
          top: {{ block.settings.vertical_position_mobile }}%;
          left: {{ block.settings.horizontal_position_mobile }}%;
          transform: translate(-50%, -50%);
          border-radius: 50%;
          display: flex;
          justify-content: center;
          align-items: center;
          width: {{ block.settings.image_width_mobile }}px;
          height: {{ block.settings.image_width_mobile }}px;       
        }

        .hero-circle-image-{{ block.id }} {
          position: absolute;         
          z-index: 2;
          border-radius: {{ block.settings.image_border_radius }}px;
          overflow: hidden;
          border: {{ block.settings.image_border_thickness }}px solid {{ block.settings.image_border_color }};
          width: {{ block.settings.image_width_mobile }}px;
          height: {{ block.settings.image_width_mobile }}px;
          -webkit-animation: rotate{{ block.id | replace: '-', '' }} {{ block.settings.speed }}s infinite linear;
          animation: rotate{{ block.id | replace: '-', '' }} {{ block.settings.speed }}s infinite linear;
          {% if block.settings.rotate == false %}
            -webkit-animation-play-state: paused;
            animation-play-state: paused;
          {% else %}
            -webkit-animation-play-state: running;
            animation-play-state: running;
          {% endif %}
        }

        .hero-circle-image-{{ block.id }} img,
        .hero-circle-image-{{ block.id }} svg {
          display: block;
          width: 100%;
          height: 100%;
          object-fit: cover;
        }

        .hero-circle-image-{{ block.id }} svg {
          background-color: #AFAFAF;
        }

        .hero-circle-text-wrapper-{{ block.id }} {
          width: {{ block.settings.image_width_mobile | minus: 5 }}px;
          height: {{ block.settings.image_width_mobile | minus: 5 }}px;
        }

        @keyframes rotate{{ block.id | replace: '-', '' }} {
          0% {
            transform: rotate(0deg);
          }
          100% {
            transform: rotate(360deg);
          }
        }

        @media(min-width: 1024px) {
          .hero-circle-{{ block.id }} {
            position: absolute;
            top: {{ block.settings.vertical_position }}%;
            left: {{ block.settings.horizontal_position }}%;;
            transform: translate(-50%, -50%);
            width: {{ block.settings.image_width }}px;
            height: {{ block.settings.image_width }}px;
          }

          .hero-circle-image-{{ block.id }} {
            width: {{ block.settings.image_width }}px;
            height: {{ block.settings.image_width }}px;
          }

          .hero-circle-text-wrapper-{{ block.id }} {
            width: {{ block.settings.image_width }}px;
            height: {{ block.settings.image_width }}px;
          }
        }
      </style>

      {% if block.settings.text_custom %}
        <style>
          .hero-circle-text-{{ block.id }} * {
            font-family: {{ block.settings.text_font.family }}, {{ block.settings.text_font.fallback_families }};
            font-weight: {{ block.settings.text_font.weight }};
            font-style: {{ block.settings.text_font.style }};
          }
        </style>          
      {% endif %}  

      {% if block.settings.hide_mobile %}
        <style>
          .hero-circle-{{ block.id }} {
            display: none;
          }

          @media(min-width: 1024px) {
            .hero-circle-{{ block.id }} {
              display: flex;
            }
          }
        </style>
     
      {% endif %}

  {% endcase %}
{% endfor %}

<div class="section-{{ section.id }} hero-{{ section.id }}" style="background-color:{{ background_color }}; background-image: {{ background_gradient }};">
    <div class="section-{{ section.id }}-settings">
      <div class="hero-body-{{ section.id }}">
        <div class="hero-content-{{ section.id }}">
          {% for block in section.blocks %}
            {% case block.type %}
              {% when 'heading'%}
                {% if block.settings.heading != blank %}
                  <div class="hero-heading-{{ block.id }}">
                    {{ block.settings.heading }}
                  </div>
                {% endif %}
              {% when 'text' %}
                {% if block.settings.text != blank %}
                  <div class="hero-text-{{ block.id }}">
                    {{ block.settings.text }}
                  </div>
                {% endif %}  
              {% when 'button' %}
                {% if block.settings.button != blank %}                 
                  <a href="{{ block.settings.url }}" class="hero-button-{{ block.id }}">
                    <p class="hero-button-inner-{{ block.id }}">
                      {{ block.settings.button }}
                      {% if block.settings.button_style == "non_outline_arrow" or block.settings.button_style == "outline_arrow" %}
                        <svg width="192" height="192" viewBox="0 0 192 192" fill="none" xmlns="http://www.w3.org/2000/svg">
                          <path d="M187.827 98.7858C188.123 98.4749 188.123 98.4749 188.123 98.1761C188.419 97.8652 188.419 97.5663 188.704 97.5663C189 96.9566 189 96.6458 189 96.0361C189 95.4263 189 94.8166 188.704 94.5058C188.704 94.195 188.408 93.8961 188.123 93.5852C188.123 93.2744 187.827 93.2744 187.827 92.9755L103.287 4.21945C102.41 3.29889 101.533 3 100.668 3C99.791 3 98.6295 3.31083 98.0488 4.21945C97.1719 5.14 96.8872 6.06058 96.8872 6.96919C96.8872 7.88974 97.1833 9.10918 98.0488 9.7189L175.587 92.0539H6.79206C4.75371 92.0539 3 93.895 3 96.0351C3 98.1751 4.75365 100.016 6.79206 100.016H175.575L97.7543 182.042C96.2967 183.572 96.2967 186.322 97.7543 187.852C99.2119 189.383 101.831 189.383 103.288 187.852L187.827 98.7858Z" fill="black"></path>
                          <path fill-rule="evenodd" clip-rule="evenodd" d="M188.607 97.5657C188.432 97.5657 188.365 97.6788 188.27 97.8382C188.211 97.9378 188.141 98.0554 188.027 98.1748C188.027 98.4734 188.027 98.4734 187.731 98.7839L103.281 187.759C101.825 189.287 99.2085 189.287 97.7524 187.759C96.2963 186.23 96.2963 183.483 97.7524 181.954L175.492 100.013L6.88489 100.013C4.8486 100.013 3.09677 98.1739 3.09677 96.036C3.09677 93.8982 4.84866 92.059 6.88489 92.059L175.504 92.059L98.0465 9.80878C97.182 9.19968 96.8862 7.9815 96.8862 7.0619C96.8862 6.15422 97.1706 5.2346 98.0465 4.315C98.6267 3.40732 99.787 3.0968 100.663 3.0968C101.527 3.0968 102.403 3.39539 103.279 4.315L187.731 92.9796C187.731 93.1274 187.804 93.2021 187.877 93.2774C187.952 93.3543 188.027 93.4319 188.027 93.5887C188.046 93.6098 188.066 93.6308 188.085 93.6518C188.338 93.9267 188.584 94.1935 188.606 94.4689C188.607 94.482 188.607 94.4951 188.607 94.5083C188.903 94.8188 188.903 95.4279 188.903 96.037C188.903 96.6461 188.903 96.9566 188.607 97.5657ZM191.489 93.2767C191.79 93.8661 191.89 94.4204 191.934 94.7363C192.001 95.2226 192 95.7194 192 95.9856L192 96.037C192 96.0544 192 96.0729 192 96.0926C192 96.3523 192.001 96.8096 191.924 97.2931C191.828 97.8884 191.64 98.41 191.393 98.9184L190.546 100.663H190.212C190.127 100.759 190.038 100.852 189.988 100.905L189.974 100.92L105.527 189.891C102.85 192.701 98.1865 192.704 95.51 189.895C94.1476 188.464 93.5636 186.587 93.5636 184.857C93.5636 183.128 94.1468 181.252 95.5071 179.822M191.489 93.2767C191.316 92.7908 191.078 92.4357 190.938 92.2406C190.903 92.1912 190.866 92.142 190.828 92.0939V91.7408L105.522 2.17912C104.076 0.661813 102.397 0 100.663 0C99.3914 0 97.0569 0.401401 95.6212 2.37737C94.3151 3.83819 93.7895 5.45521 93.7895 7.0619C93.7895 8.26663 94.1183 10.6061 95.9608 12.111L168.333 88.9622L6.88489 88.9622C2.9981 88.9622 0 92.3316 0 96.036C0 99.7405 2.99801 103.11 6.88489 103.11L168.285 103.11" fill="black"></path>
                          <path d="M169.5 104L16.5 102.5V90H171L97.5 10.5V7L107.5 4.5C131.167 29.6667 180.2 81.5 187 87.5C193.8 93.5 191.5 99 189.5 101L105.5 184L94 181.5L169.5 104Z" fill="black"></path>
                        </svg>
                      {% endif %}
                    </p>
                  </a>     
                {% endif %}
            {% endcase %}
          {% endfor %}          
        </div>
        {% for block in section.blocks %}
          {% if block.type == 'circle' %}
            <div class="hero-circle-{{ block.id }}">
              <div class="hero-circle-image-{{ block.id }}">
                {% if block.settings.image != blank %}
                  <img src="{{ block.settings.image | img_url: "500x500" }}" alt="{{ block.settings.image.alt }}" {% if lazy %}loading="lazy"{% endif %}>         
                {% else %}
                  {{ 'image' | placeholder_svg_tag }}
                {% endif %}
              </div>           
            </div>
          {% endif %}
        {% endfor %}
        <div class="hero-image-{{ section.id }}">
          {% if image != blank %}
            <img src="{{ image | img_url: "1500x1500" }}" alt="{{ image.alt }}" {% if lazy %}loading="lazy"{% endif %}>         
          {% else %}
            {{ 'image' | placeholder_svg_tag }}
          {% endif %}
        </div>
      </div>
    </div>
</div>

{% schema %}
  {
    "name": "SS - Hero #27",
    "settings": [
      {
        "type": "header",
        "content": "Layout"
      },
      {
        "type": "select",
        "id": "layout",
        "label": "Image placement",
        "default": "content_image",
        "options": [
          {
            "label": "Align image right",
            "value": "content_image"
          },
          {
            "label": "Align image left",
            "value": "image_content"
          }
        ]
      },
      {
        "type": "select",
        "id": "layout_mobile",
        "label": "Image placement - mobile",
        "default": "content_image",
        "options": [
          {
            "label": "Text on top",
            "value": "content_image"
          },
          {
            "label": "Image on top",
            "value": "image_content"
          }
        ]
      },
      {
        "type": "select",
        "id": "layout_height",
        "label": "Height",
        "default": "fixed_height",
        "options": [
          {
            "label": "Full screen",
            "value": "full_screen"
          },
          {
            "label": "Fixed height",
            "value": "fixed_height"
          },
          {
            "label": "Auto",
            "value": "auto"
          }
        ]
      },
      {
        "type": "range",
        "id": "layout_fixed_height",
        "min": 200,
        "max": 1000,
        "step": 10,
        "unit": "px",
        "label": "Fixed height",
        "default": 600
      },      
      {
        "type": "range",
        "id": "image_width",
        "min": 30,
        "max": 70,
        "step": 5,
        "unit": "%",
        "label": "Image width",
        "default": 50
      },      
      {
        "type": "range",
        "id": "layout_gap",
        "min": 0,
        "max": 72,
        "step": 2,
        "unit": "px",
        "label": "Gap",
        "default": 10
      },
      {
        "type": "range",
        "id": "layout_gap_mobile",
        "min": 0,
        "max": 72,
        "step": 2,
        "unit": "px",
        "label": "Gap - mobile",
        "default": 10
      },
      {
        "type": "header",
        "content": "Content"
      },
      {
        "type": "range",
        "id": "content_padding_horizontal",
        "min": 0,
        "max": 100,
        "step": 2,
        "unit": "px",
        "label": "Padding horizontal",
        "default": 40
      },
      {
        "type": "range",
        "id": "content_padding_horizontal_mobile",
        "min": 0,
        "max": 100,
        "step": 2,
        "unit": "px",
        "label": "Padding horizontal - mobile",
        "default": 24
      },
      {
        "type": "range",
        "id": "content_padding_vertical",
        "min": 0,
        "max": 100,
        "step": 2,
        "unit": "px",
        "label": "Padding vertical",
        "default": 32
      },
      {
        "type": "range",
        "id": "content_padding_vertical_mobile",
        "min": 0,
        "max": 100,
        "step": 2,
        "unit": "px",
        "label": "Padding vertical - mobile",
        "default": 32
      },
      {
        "type": "range",
        "id": "content_radius",
        "min": 0,
        "max": 100,
        "step": 2,
        "unit": "px",
        "label": "Roundness",
        "default": 16
      },
      {
        "type": "range",
        "id": "content_border_thickness",
        "min": 0,
        "max": 10,
        "step": 1,
        "unit": "px",
        "label": "Border thickness",
        "default": 0
      },
      {
        "type": "text_alignment",
        "id": "content_align",
        "label": "Alignment"
      },
      {
        "type": "text_alignment",
        "id": "content_align_mobile",
        "label": "Alignment - mobile"
      },
      {
        "type": "select",
        "id": "content_vertical_align",
        "label": "Vertical align - desktop",
        "default": "center",
        "options": [
          {
            "label": "Top",
            "value": "start"
          },
          {
            "label": "Center",
            "value": "center"
          },
          {
            "label": "Bottom",
            "value": "end"
          }
        ]
      },
      {
        "type": "header",
        "content": "Image"
      },
      {
        "type": "image_picker",
        "id": "image",
        "label": "Image"
      },
      {
        "type": "select",
        "id": "image_ratio_mobile",
        "label": "Aspect ratio - mobile",
        "default": "square",
        "options": [
          {
            "label": "Portrait",
            "value": "portrait"
          },
          {
            "label": "Square",
            "value": "square"
          },
          {
            "label": "Landscape",
            "value": "landscape"
          },
          {
            "label": "Original",
            "value": "original"
          }
        ]
      },
      {
        "type": "range",
        "id": "image_radius",
        "min": 0,
        "max": 100,
        "step": 2,
        "unit": "px",
        "label": "Roundness",
        "default": 16
      },
      {
        "type": "range",
        "id": "image_border_thickness",
        "min": 0,
        "max": 10,
        "step": 1,
        "unit": "px",
        "label": "Border thickness",
        "default": 0
      },    
      {
        "type": "header",
        "content": "Content colors"
      },
      {
        "type": "color",
        "label": "Background",
        "id": "content_bg_color",
        "default": "#F3F3F3"
      },
      {
        "type": "color",
        "label": "Border",
        "id": "content_border_color",
        "default": "#121212"
      },
      {
        "type": "header",
        "content": "Image colors"
      },
      {
        "type": "color",
        "label": "Border",
        "id": "image_border_color",
        "default": "#121212"
      },
      {
        "type": "header",
        "content": "Section colors"
      },
      {
        "type": "color",
        "label": "Section background",
        "id": "background_color",
        "default": "#FFFFFF"
      },
      {
        "type": "color_background",
        "id": "background_gradient",
        "label": "Section background gradient",
        "info": "Remove gradient to replace with solid colors"
      },
      {
        "type": "color",
        "label": "Border",
        "id": "border_color",
        "default": "#121212"
      },
      {
        "type": "header",
        "content": "Section margin (outside)"
      },
      {
        "type": "range",
        "id": "margin_top",
        "min": 0,
        "max": 100,
        "step": 4,
        "unit": "px",
        "label": "Margin top",
        "default": 0
      },
      {
        "type": "range",
        "id": "margin_bottom",
        "min": 0,
        "max": 100,
        "step": 4,
        "unit": "px",
        "label": "Margin bottom",
        "default": 0
      },
      {
        "type": "range",
        "id": "margin_horizontal",
        "min": 0,
        "max": 30,
        "step": 1,
        "unit": "rem",
        "label": "Margin sides",
        "default": 0
      },
      {
        "type": "range",
        "id": "margin_horizontal_mobile",
        "min": 0,
        "max": 15,
        "step": 0.5,
        "unit": "rem",
        "label": "Margin sides mobile",
        "default": 0
      },
      {
        "type": "header",
        "content": "Section padding (inside)"
      },
      {
        "type": "range",
        "id": "padding_top",
        "min": 0,
        "max": 100,
        "step": 4,
        "unit": "px",
        "label": "Padding top",
        "default": 36
      },
      {
         "type": "range",
         "id": "padding_bottom",
         "min": 0,
         "max": 100,
         "step": 4,
         "unit": "px",
         "label": "Padding bottom",
         "default": 36
      },
      {
        "type": "range",
        "id": "padding_horizontal",
        "min": 0,
        "max": 30,
        "step": 1,
        "unit": "rem",
        "label": "Padding sides",
        "default": 5
      },
      {
        "type": "range",
        "id": "padding_horizontal_mobile",
        "min": 0,
        "max": 15,
        "step": 0.5,
        "unit": "rem",
        "label": "Padding sides mobile",
        "default": 1.5
      },
      {
        "type": "header",
        "content": "Section"
      },
      {
        "type": "checkbox",
        "id": "full_width",
        "label": "Full width",
        "default": true
      },
      {
        "type": "range",
        "id": "content_width",
        "min": 800,
        "max": 2000,
        "step": 100,
        "unit": "px",
        "label": "Section content width",
        "default": 1300
      },
      {
        "type": "range",
        "id": "border_thickness",
        "min": 0,
        "max": 50,
        "step": 1,
        "unit": "px",
        "label": "Border thickness",
        "default": 0
      },
      {
        "type": "range",
        "id": "section_radius",
        "min": 0,
        "max": 100,
        "step": 2,
        "unit": "px",
        "label": "Section roundness",
        "default": 0
      },
      {
        "type": "checkbox",
        "id": "lazy",
        "label": "Lazy load",
        "info": "Lazy load images for speed optimisation",
        "default": false
      }
    ],
    "blocks": [
      {            
        "type": "heading",
        "limit": 1,
        "name": "Heading",
        "settings": [
          {
            "type": "richtext",
            "id": "heading",
            "label": "Heading",
            "default": "<h1>Hero #27</h1>"
          },
          {
            "type": "checkbox",
            "id": "heading_custom",
            "label": "Use custom font",
            "default": false
          },
          {
            "type": "font_picker",
            "id": "heading_font",
            "label": "Font family",
            "default": "josefin_sans_n4"
          },
          {
            "type": "range",
            "id": "heading_size",
            "min": 0,
            "max": 72,
            "step": 2,
            "unit": "px",
            "label": "Font size",
            "default": 48
          },
          {
            "type": "range",
            "id": "heading_size_mobile",
            "min": 0,
            "max": 72,
            "step": 2,
            "unit": "px",
            "label": "Font size - mobile",
            "default": 32
          },
          {
            "type": "range",
            "id": "heading_height",
            "min": 50,
            "max": 200,
            "step": 10,
            "unit": "%",
            "label": "Line height",
            "default": 130
          },
          {
            "type": "range",
            "id": "heading_mt",
            "min": 0,
            "max": 100,
            "step": 2,
            "unit": "px",
            "label": "Margin top",
            "default": 0
          },
          {
            "type": "range",
            "id": "heading_mt_mobile",
            "min": 0,
            "max": 100,
            "step": 2,
            "unit": "px",
            "label": "Margin top - mobile",
            "default": 0
          },
          {
            "type": "color",
            "label": "Color",
            "id": "heading_color",
            "default": "#121212"
          }
        ]
      },
      {
        "type": "text",
        "name": "Text",
        "settings": [
          {
            "type": "richtext",
            "id": "text",
            "label": "Text",
            "default": "<p>Use this text to share information about your brand with your customers. Describe a product, make announcements, or welcome customers to your store.</p>"
          },
          {
            "type": "checkbox",
            "id": "text_custom",
            "label": "Use custom font",
            "default": false
          },
          {
            "type": "font_picker",
            "id": "text_font",
            "label": "Font family",
            "default": "josefin_sans_n4"
          },
          {
            "type": "range",
            "id": "text_size",
            "min": 0,
            "max": 40,
            "step": 1,
            "unit": "px",
            "label": "Font size",
            "default": 18
          },
          {
            "type": "range",
            "id": "text_size_mobile",
            "min": 0,
            "max": 40,
            "step": 1,
            "unit": "px",
            "label": "Font size - mobile",
            "default": 16
          },
          {
            "type": "range",
            "id": "text_height",
            "min": 50,
            "max": 200,
            "step": 10,
            "unit": "%",
            "label": "Line height",
            "default": 150
          },
          {
            "type": "range",
            "id": "text_mt",
            "min": 0,
            "max": 100,
            "step": 2,
            "unit": "px",
            "label": "Margin top",
            "default": 16
          },
          {
            "type": "range",
            "id": "text_mt_mobile",
            "min": 0,
            "max": 100,
            "step": 2,
            "unit": "px",
            "label": "Margin top - mobile",
            "default": 12
          },
          {
            "type": "color",
            "label": "Color",
            "id": "text_color",
            "default": "#121212"
          }
        ]
      },
      {
        "type": "button",
        "name": "Button",
        "settings": [
          {
            "type": "text",
            "id": "button",
            "label": "Button label",
            "default": "Shop now"
          },
          {
            "type": "url",
            "id": "url",
            "label": "Button link"
          },
          {
            "type": "checkbox",
            "id": "button_custom",
            "label": "Use custom font",
            "default": false
          },
          {
            "type": "font_picker",
            "id": "button_font",
            "label": "Font family",
            "default": "josefin_sans_n4"
          },
          {
            "type": "range",
            "id": "button_size",
            "min": 0,
            "max": 30,
            "step": 1,
            "unit": "px",
            "label": "Font size",
            "default": 16
          },
          {
            "type": "range",
            "id": "button_size_mobile",
            "min": 0,
            "max": 30,
            "step": 1,
            "unit": "px",
            "label": "Font size - mobile",
            "default": 14
          },
          {
            "type": "range",
            "id": "button_height",
            "min": 50,
            "max": 200,
            "step": 10,
            "unit": "%",
            "label": "Line height",
            "default": 100
          },
          {
            "type": "range",
            "id": "button_padding_horizontal",
            "min": 0,
            "max": 100,
            "step": 2,
            "unit": "px",
            "label": "Padding horizontal",
            "default": 32
          },
          {
            "type": "range",
            "id": "button_padding_horizontal_mobile",
            "min": 0,
            "max": 100,
            "step": 2,
            "unit": "px",
            "label": "Padding horizontal - mobile",
            "default": 32
          },
          {
            "type": "range",
            "id": "button_padding_vertical",
            "min": 0,
            "max": 100,
            "step": 2,
            "unit": "px",
            "label": "Padding vertical",
            "default": 16
          },
          {
            "type": "range",
            "id": "button_padding_vertical_mobile",
            "min": 0,
            "max": 100,
            "step": 2,
            "unit": "px",
            "label": "Padding vertical - mobile",
            "default": 16
          },
          {
            "type": "range",
            "id": "button_radius",
            "min": 0,
            "max": 100,
            "step": 2,
            "unit": "px",
            "label": "Roundness",
            "default": 100
          },
          {
            "type": "range",
            "id": "button_border_thickness",
            "min": 0,
            "max": 10,
            "step": 1,
            "unit": "px",
            "label": "Border thickness",
            "default": 1
          },
          {
            "type": "range",
            "id": "button_mt",
            "min": 0,
            "max": 100,
            "step": 2,
            "unit": "px",
            "label": "Margin top",
            "default": 24
          },
          {
            "type": "range",
            "id": "button_mt_mobile",
            "min": 0,
            "max": 100,
            "step": 2,
            "unit": "px",
            "label": "Margin top - mobile",
            "default": 20
          },
          {
            "type": "select",
            "id": "button_style",
            "label": "Button style",
            "default": "non_outline_arrow",
            "options": [
              {
                "label": "Link",
                "value": "link"
              },
              {
                "label": "Non-outline",
                "value": "non_outline"
              },
              {
                "label": "Non-outline & arrow",
                "value": "non_outline_arrow"
              },
              {
                "label": "Outline",
                "value": "outline"
              },
              {
                "label": "Outline & arrow",
                "value": "outline_arrow"
              }
            ]
          },
          {
            "type": "header",
            "content": "Colors"
          },
          {
            "type": "color",
            "label": "Text",
            "id": "button_color",
            "default": "#FFFFFF"
          },
          {
            "type": "color",
            "label": "Hover text",
            "id": "button_hover_color",
            "default": "#121212"
          },
          {
            "type": "color",
            "label": "Background",
            "id": "button_bg_color",
            "default": "#121212"
          },
          {
            "type": "color",
            "label": "Background hover",
            "id": "button_bg_hover_color",
            "default": "#FFFFFF"
          },
          {
            "type": "color",
            "label": "Button border",
            "id": "button_border_color",
            "default": "#121212"
          },
          {
            "type": "color",
            "label": "Border hover",
            "id": "button_border_hover_color",
            "default": "#121212"
          }
        ]
      },
      {
        "type": "circle",
        "name": "Sticker",
        "settings": [       
          {
            "type": "image_picker",
            "id": "image",
            "label": "Image"
          },    
          {
            "type": "range",
            "id": "image_width",
            "min": 50,
            "max": 200,
            "step": 10,
            "unit": "px",
            "label": "Size",
            "default": 100
          },
          {
            "type": "range",
            "id": "image_width_mobile",
            "min": 50,
            "max": 200,
            "step": 10,
            "unit": "px",
            "label": "Size - mobile",
            "default": 100
          },
          {
            "type": "range",
            "id": "image_border_radius",
            "min": 0,
            "max": 100,
            "step": 1,
            "unit": "px",
            "label": "Roundness",
            "default": 100
          },
          {
            "type": "range",
            "id": "image_border_thickness",
            "min": 0,
            "max": 10,
            "step": 1,
            "unit": "px",
            "label": "Border thickness",
            "default": 2
          },
          {
            "type": "color",
            "label": "Border color",
            "id": "image_border_color",
            "default": "#FFFFFF"
          },
          {
            "type": "checkbox",
            "id": "rotate",
            "label": "Enable rotation",
            "default": true
          },
          {
            "type": "range",
            "id": "speed",
            "min": 1,
            "max": 15,
            "step": 1,
            "unit": "s",
            "label": "Speed",
            "default": 8
          },
          {
            "type": "range",
            "id": "vertical_position",
            "min": 0,
            "max": 100,
            "step": 1,
            "unit": "%",
            "label": "Vertical position",
            "default": 20
          },
          {
            "type": "range",
            "id": "vertical_position_mobile",
            "min": 0,
            "max": 100,
            "step": 1,
            "unit": "%",
            "label": "Vertical position - mobile",
            "default": 50
          },
          {
            "type": "range",
            "id": "horizontal_position",
            "min": 0,
            "max": 100,
            "step": 1,
            "unit": "%",
            "label": "Horizontal position",
            "default": 50
          },
          {
            "type": "range",
            "id": "horizontal_position_mobile",
            "min": 0,
            "max": 100,
            "step": 1,
            "unit": "%",
            "label": "Horizontal position - mobile",
            "default": 50
          },
          {
            "type": "checkbox",
            "id": "hide_mobile",
            "label": "Hide on mobile",
            "default": true
          }
        ]
      },
    ],
    "presets": [
      {
        "name": "SS - Hero #27",
        "blocks": [
          {
            "type": "heading"
          },
          {
            "type": "text"
          },
          {
            "type": "button"
          },
          {
            "type": "circle"
          }
        ]
      }
    ]
  }
{% endschema %}