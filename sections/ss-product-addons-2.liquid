{% comment %}
---------------------------------------------------------
Copyright Â© 2023 Section Store. All rights reserved.
Unauthorized copying, modification, distribution, or use
of this code or any portion of it, is strictly prohibited.
Violators will be prosecuted to the fullest extent of the law.
For inquiries or permissions, contact daniel@section.store
---------------------------------------------------------
{% endcomment %}

<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/swiper@9/swiper-bundle.min.css"/>

{%- liquid 
  assign padding_horizontal = section.settings.padding_horizontal
  assign padding_horizontal_mobile = section.settings.padding_horizontal_mobile
  assign padding_top = section.settings.padding_top
  assign padding_bottom = section.settings.padding_bottom
  assign border_color = section.settings.border_color
  assign border_thickness = section.settings.border_thickness
  assign margin_top = section.settings.margin_top
  assign margin_bottom = section.settings.margin_bottom
  assign background_color = section.settings.background_color
  assign background_gradient = section.settings.background_gradient
  assign lazy = section.settings.lazy
  assign form_class = section.settings.form_class

  assign addons_position = section.settings.addons_position
  
  assign use_metafield = section.settings.use_metafield
  assign use_variants = section.settings.use_variants
  
  assign link = section.settings.link
  assign badge = section.settings.badge
  assign soldout = section.settings.soldout

  assign slide_border_color = section.settings.slide_border_color
  assign slide_border_thickness = section.settings.slide_border_thickness
  assign slide_bg_color = section.settings.slide_bg_color
  assign slide_radius = section.settings.slide_radius

  assign image_border_color = section.settings.image_border_color
  assign image_border_thickness = section.settings.image_border_thickness
  assign image_size = section.settings.image_size
  assign image_size_mobile = section.settings.image_size_mobile

  assign content_padding_vertical_mobile = section.settings.content_padding_vertical_mobile
  assign content_padding_vertical = section.settings.content_padding_vertical
  assign content_padding_horizontal_mobile = section.settings.content_padding_horizontal_mobile
  assign content_padding_horizontal = section.settings.content_padding_horizontal
  assign content_bg_color = section.settings.content_bg_color

  assign product_heading_size = section.settings.product_heading_size
  assign product_heading_size_mobile = section.settings.product_heading_size_mobile
  assign product_heading_color = section.settings.product_heading_color
  assign product_heading_font = section.settings.product_heading_font
  assign product_heading_height = section.settings.product_heading_height
  assign product_heading_custom = section.settings.product_heading_custom

  assign product_price_size = section.settings.product_price_size
  assign product_price_size_mobile = section.settings.product_price_size_mobile
  assign product_price_color = section.settings.product_price_color
  assign product_price_font = section.settings.product_price_font
  assign product_price_height = section.settings.product_price_height
  assign product_price_custom = section.settings.product_price_custom
  assign product_price_mt = section.settings.product_price_mt

  assign product_badge_size = section.settings.product_badge_size
  assign product_badge_size_mobile = section.settings.product_badge_size_mobile
  assign product_badge_color = section.settings.product_badge_color
  assign product_badge_font = section.settings.product_badge_font
  assign product_badge_height = section.settings.product_badge_height
  assign product_badge_custom = section.settings.product_badge_custom
  assign product_badge_padding_vertical = section.settings.product_badge_padding_vertical
  assign product_badge_padding_horizontal = section.settings.product_badge_padding_horizontal
  assign product_badge_radius = section.settings.product_badge_radius
  assign badge_bg_color = section.settings.badge_bg_color
  assign badge_color = section.settings.badge_color

  assign product_link_size = section.settings.product_link_size
  assign product_link_size_mobile = section.settings.product_link_size_mobile
  assign product_link_color = section.settings.product_link_color
  assign product_link_font = section.settings.product_link_font
  assign product_link_height = section.settings.product_link_height
  assign product_link_custom = section.settings.product_link_custom

  assign label_active_bg_color = section.settings.label_active_bg_color
  assign label_bg_color = section.settings.label_bg_color

  assign navigation_mt = section.settings.navigation_mt

  assign arrow_size = section.settings.arrow_size
  assign arrow_size_mobile = section.settings.arrow_size_mobile
  assign arrow_icon_size = section.settings.arrow_icon_size
  assign arrow_icon_size_mobile = section.settings.arrow_icon_size_mobile
  assign arrow_color = section.settings.arrow_color
  assign arrow_hover_color = section.settings.arrow_hover_color
  assign arrow_bg_color = section.settings.arrow_bg_color
  assign arrow_bg_hover_color = section.settings.arrow_bg_hover_color
  assign arrow_border_thickness = section.settings.arrow_border_thickness
  assign arrow_border_color = section.settings.arrow_border_color
  assign arrow_border_hover_color = section.settings.arrow_border_hover_color
  assign arrow_show_desktop = section.settings.arrow_show_desktop
  assign arrow_show_mobile = section.settings.arrow_show_mobile

  assign dots_size = section.settings.dots_size
  assign dots_size_mobile = section.settings.dots_size_mobile
  assign dots_show_desktop = section.settings.dots_show_desktop
  assign dots_show_mobile = section.settings.dots_show_mobile
  assign dots_color = section.settings.dots_color


-%}

{%- style -%}

  {{ product_heading_font | font_face: font_display: 'swap' }}
  {{ product_price_font | font_face: font_display: 'swap' }}
  {{ product_link_font | font_face: font_display: 'swap' }}

  .swiper-slide {
    display:flex!important;
  }
  
  .section-{{ section.id }} {
    width: 100%;
    border-top: solid {{ border_color }} {{ border_thickness }}px;
    border-bottom: solid {{ border_color }} {{ border_thickness }}px;
    margin-top: {{ margin_top | times: 0.75 | round: 0 }}px;
    margin-bottom: {{ margin_bottom | times: 0.75 | round: 0 }}px;
  }
  
  .section-{{ section.id }}-settings {
    margin: 0 auto;
    padding-top: {{ padding_top | times: 0.75 | round: 0 }}px;
    padding-bottom: {{ padding_bottom | times: 0.75 | round: 0 }}px;
    padding-left: {{ padding_horizontal_mobile }}rem;
    padding-right: {{ padding_horizontal_mobile }}rem;
  }

  .addons-slider-{{ section.id }} .swiper-wrapper {
    align-items: stretch;
  }

  .addons-slide-{{ section.id }} {
    display: flex;
    border-radius: {{ slide_radius }}px;
    height: unset !important;
    background-color: {{ slide_bg_color }};
    border: {{ slide_border_thickness }}px solid {{ slide_border_color }};
    box-sizing: border-box !important;
    overflow: hidden;
  }

  .addons-image-{{ section.id }} {
    position: relative;
    width: {{ image_size_mobile }}px;
    border: {{ image_border_thickness }}px solid {{ image_border_color }};
  }

  .addons-image-{{ section.id }} img {
    display: block;
    width: 100%;
    height: 100%;
    object-fit: contain;
    padding-bottom: {{section.settings.image_padding_bottom}}px;
  }

  .addons-content-{{ section.id }} {
    height: 100%;
    width: 100%;
    padding: {{ content_padding_vertical_mobile }}px {{ content_padding_horizontal_mobile }}px;
    background-color: {{ content_bg_color }};
    display: flex;
    justify-content: space-between;
    gap: 10px;
  }

  .addons-input-{{ section.id }} {
    position: absolute;
    opacity: 0;
    pointer-events: none;
    z-index: -1;
  }

  .addons-title-{{ section.id }} {
    margin: 0px;
    font-size: {{ product_heading_size_mobile }}px;
    color: {{ product_heading_color }};
    line-height: {{ product_heading_height }}%;
    text-transform: uppercase;
    font-weight: 700;
  }

  .addons-price-{{ section.id }} {
    margin-top: {{ product_price_mt | times: 0.75 | round: 0 }}px;
    display: flex;
    align-items: center;
    flex-wrap: wrap;
    gap: 5px;
  }

  .addons-price-value-{{ section.id }} {
    margin: 0px;
    font-size: {{ product_price_size_mobile }}px;
    color: {{ product_price_color }};
    line-height: {{ product_price_height }}%;
    text-transform: uppercase;
    font-weight: 700;
  }

  .addons-badge-{{ section.id }} {
    display: block;
    margin: 0px;
    padding: {{ product_badge_padding_vertical }}px {{ product_badge_padding_horizontal }}px;
    border-radius: {{ product_badge_radius }}px;
    font-size: {{ product_badge_size_mobile }}px;
    color: {{ product_badge_color }};
    line-height: {{ product_badge_height }}%;
    text-transform: uppercase;
    font-weight: 700;
  }

  .addons-label-{{ section.id }} {
    display: block;
    flex: 0 0 55px;
    height: 30px;
    position: relative;
    display: inline-block;
    border-radius: 26px;
    background-color: {{ label_bg_color }};
    transform: scale(1.01);
    cursor: pointer;
  }

  .addons-toggler-{{ section.id }} {
    width: 28px;
    height: 28px;
    position: absolute;
    content: "";
    left: 1px;
    bottom: 1px;
    background-color: #fff;
    border-radius: 50%;
    pointer-events: none;
    transition: all 0.2s ease-in-out;
    -webkit-transition: all 0.2s ease-in-out;
  }

  .addons-input-{{ section.id }}:checked + .addons-label-{{ section.id }} {
    background-color: {{ label_active_bg_color }};
  }

  .addons-input-{{ section.id }}:checked + .addons-label-{{ section.id }} .addons-toggler-{{ section.id }} {
    transform: translateX(25px);
  }

  .addons-link-{{ section.id }} {
    position: absolute;
    width: 100%;
    display: block;
    bottom: 5px;
    left: 0;
    text-align: center;
    margin: 0px;
    font-size: {{ product_link_size_mobile }}px;
    color: {{ product_link_color }};
    line-height: {{ product_link_height }}%;
    text-transform: uppercase;
    font-weight: 700;
    text-decoration: underline;
  }

  .addons-navigation-{{ section.id }} {
    margin-top: {{ navigation_mt | times: 0.75 | round: 0 }}px;
    display: flex;
    align-items: center;
    justify-content: space-between;
    gap: 10px;
  }

  .addons-btns-{{ section.id }} {
    display: flex;
    align-items: center;
    gap: 5px;
  }
  
  .addons-btn-prev-{{ section.id }},
  .addons-btn-next-{{ section.id }} {
    position: static !important;
    z-index: 2;
    width: {{ arrow_size_mobile }}px;
    height: {{ arrow_size_mobile }}px;
    border: {{ arrow_border_thickness }}px solid {{ arrow_border_color }};
    border-radius: 50%;
    background: {{ arrow_bg_color }};
    align-items: center;
    justify-content: center;
    transition: all 0.3s ease 0s;
    cursor: pointer;
    -webkit-appearance: none;
  }

  .addons-btn-prev-{{ section.id }} svg,
  .addons-btn-next-{{ section.id }} svg {
    height: {{ arrow_icon_size_mobile }}px;
    min-width: {{ arrow_icon_size_mobile }}px;
  }

  .addons-btn-next-{{ section.id }} svg {
    transform: rotate(180deg);
    margin-left: 2px;
  }

  .addons-btn-prev-{{ section.id }} svg {
    margin-left: -2px;
  }

  .addons-btn-prev-{{ section.id }} svg path,
  .addons-btn-next-{{ section.id }} svg path {
    fill: {{ arrow_color }};
    transition: all 0.3s ease 0s;
  }

  .addons-btn-prev-{{ section.id }}:hover,
  .addons-btn-next-{{ section.id }}:hover {
    transition: all 0.3s ease 0s;
    border: {{ arrow_border_thickness }}px solid {{ arrow_border_hover_color }};
    background: {{ arrow_bg_hover_color }};
  }

  .addons-btn-prev-{{ section.id }}:hover svg path,
  .addons-btn-next-{{ section.id }}:hover svg path {
    fill: {{ arrow_hover_color }};
    transition: all 0.3s ease 0s;
  }

  .addons-btn-prev-{{ section.id }}.swiper-button-disabled,
  .addons-btn-next-{{ section.id }}.swiper-button-disabled {
    opacity: 0.3;
  }

  .addons-pagination-{{ section.id }} {
    position: static !important;
    align-items: center;
  }

  .addons-pagination-{{ section.id }} .swiper-pagination-bullet {
    width: {{ dots_size_mobile }}px;
    height: {{ dots_size_mobile }}px;
    border: 2px solid {{ dots_color }};
    background-color: transparent;
    opacity: 0.6;
  }

  .addons-pagination-{{ section.id }} .swiper-pagination-bullet.swiper-pagination-bullet-active {
    opacity: 1;
    background-color: {{ dots_color }}
  }

  .addons-select-{{ section.id }} {
    width: 100%;
    max-width: 91%;
  }

  @media(min-width: 415px ) {
    .addons-image-{{ section.id }} {
      aspect-ratio: 1/1;
    }
  }
  
  @media(min-width: 1024px) {

    .section-{{ section.id }} {
      margin-top: {{ margin_top }}px;
      margin-bottom: {{ margin_bottom }}px;
    }
    
    .section-{{ section.id }}-settings {
      padding: 0 5rem;
      padding-top: {{ padding_top }}px;
      padding-bottom: {{ padding_bottom }}px;
      padding-left: {{ padding_horizontal }}rem;
      padding-right: {{ padding_horizontal }}rem;
    }

    .addons-image-{{ section.id }} {
      width: {{ image_size }}px;
    }

    .addons-content-{{ section.id }} {
      padding: {{ content_padding_vertical }}px {{ content_padding_horizontal }}px;
    }

    .addons-title-{{ section.id }} {
      font-size: {{ product_heading_size }}px;
    }

    .addons-price-value-{{ section.id }} {
      font-size: {{ product_price_size }}px;
    }

    .addons-badge-{{ section.id }} {
      font-size: {{ product_badge_size }}px;
    }

    .addons-link-{{ section.id }} {
      font-size: {{ product_link_size }}px;
    }

    .addons-navigation-{{ section.id }} {
      margin-top: {{ navigation_mt }}px;
    }

    .addons-btn-prev-{{ section.id }},
    .addons-btn-next-{{ section.id }} {
      width: {{ arrow_size }}px;
      height: {{ arrow_size }}px;
    }

    .addons-btn-prev-{{ section.id }} svg,
    .addons-btn-next-{{ section.id }} svg {
      height: {{ arrow_icon_size }}px;
      min-width: {{ arrow_icon_size }}px;
    }

    .addons-pagination-{{ section.id }} .swiper-pagination-bullet {
      width: {{ dots_size }}px;
      height: {{ dots_size }}px;
    }
      
  }
  
{%- endstyle -%}

{% if product_heading_custom %}
  <style>
    .addons-title-{{ section.id }} {
      font-family: {{ product_heading_font.family }}, {{ product_heading_font.fallback_families }};
      font-weight: {{ product_heading_font.weight }};
      font-style: {{ product_heading_font.style }};
    }
  </style>
{% endif %}

{% if product_price_custom %}
  <style>
    .addons-price-value-{{ section.id }} {
      font-family: {{ product_price_font.family }}, {{ product_price_font.fallback_families }};
      font-weight: {{ product_price_font.weight }};
      font-style: {{ product_price_font.style }};
    }
  </style>
{% endif %}

{% if product_badge_custom %}
  <style>
    .addons-badge-{{ section.id }} {
      font-family: {{ product_badge_font.family }}, {{ product_badge_font.fallback_families }};
      font-weight: {{ product_badge_font.weight }};
      font-style: {{ product_badge_font.style }};
    }
  </style>
{% endif %}

{% if product_link_custom %}
  <style>
    .addons-link-{{ section.id }} {
      font-family: {{ product_link_font.family }}, {{ product_link_font.fallback_families }};
      font-weight: {{ product_link_font.weight }};
      font-style: {{ product_link_font.style }};
    }
  </style>
{% endif %}

{% if arrow_show_mobile %}
  <style>
    .addons-btn-prev-{{ section.id }},
    .addons-btn-next-{{ section.id }} {
      display: flex;
    }
  </style>
{% else %}
  <style>
    .addons-btn-prev-{{ section.id }},
    .addons-btn-next-{{ section.id }} {
      display: none;
    }
  </style>
{% endif %}

{% if arrow_show_desktop %}
  <style>
    @media(min-width: 1024px) {
      .addons-btn-prev-{{ section.id }},
      .addons-btn-next-{{ section.id }} {
        display: flex;
      }
    }
  </style>
{% else %}
  <style>
    @media(min-width: 1024px) {
      .addons-btn-prev-{{ section.id }},
      .addons-btn-next-{{ section.id }} {
        display: none;
      }
    }
  </style>
{% endif %}

{% if dots_show_mobile %}
  <style>
    .addons-pagination-{{ section.id }} {
      display: flex !important;
    }
  </style>
{% else %}
  <style>
    .addons-pagination-{{ section.id }} {
      display: none !important;
    }
  </style>
{% endif %}

{% if dots_show_desktop %}
  <style>
    @media(min-width: 1024px) {
      .addons-pagination-{{ section.id }} {
        display: flex !important;
      }
    }
  </style>
{% else %}
  <style>
    @media(min-width: 1024px) {
      .addons-pagination-{{ section.id }} {
        display: none !important;
      }
    }
  </style>
{% endif %}

<script>
  (function () {
    function moreLoadProductForm() {
      var productForm = document.querySelector('#ss-addons');
      if (!productForm){
        var productForm = document.querySelector('{% if addons_position == "below_title" or addons_position == "above_title" %}.product__title{% elsif addons_position == "below_description" %}.product__description{% else %}.button--add-to-cart, .product .product-form, .product-single__add-to-cart, .shopify-payment-button, .shopify-payment-button__button, .ProductForm__BuyButtons, .add-to-cart{% endif %}');
        if (!productForm) return;
        }
        const templateContent = document.querySelector(
          '#ss-addons-{{ section.id }}'
        ).content;

        productForm.insertAdjacentElement(
          '{% if addons_position == "below_buy" or addons_position == "below_title" or addons_position == "below_description" %}afterend{% else %}beforebegin{% endif %}',
          templateContent.firstElementChild
        );
    }
    function moreUnloadProductForm() {
      const productForm = document.querySelector('.button--add-to-cart, .product .product-form, .product-single__add-to-cart, .shopify-payment-button, .shopify-payment-button__button, .ProductForm__BuyButtons');

      if (!productForm) return;

      const contentTemplateBuyWith = document.querySelector(
        '#addons-body-{{ section.id }}'
      );

      if (contentTemplateBuyWith) contentTemplateBuyWith.remove();

    }
    window.addEventListener('DOMContentLoaded', moreLoadProductForm);
  })();
</script>

<template id="ss-addons-{{ section.id }}">
    <div class="section-{{ section.id }} addons-{{ section.id }}" style="background-color:{{ background_color }}; background-image: {{ background_gradient }};">
      <div class="section-{{ section.id }}-settings" id="ss-addons-body-{{ section.id }}">
        <div class="addons-body-{{ section.id }}">
          <div class="addons-slider-{{ section.id }} swiper">
            <div class="swiper-wrapper">
              {% if use_metafield %}
                {% assign products = product.metafields.custom.addons_products_2.value %}
                {% if products != blank %}
                  {% for product in products %}
  
                    <div class="addons-slide-{{ section.id }} swiper-slide">
                        
                        {% if product.featured_image != blank %}
                          <a href="{{ product.url }}" class="addons-image-{{ section.id }}">
                            {% if use_variants and product.selected_or_first_available_variant.featured_image != blank %}
                              <img src="{{ product.selected_or_first_available_variant.featured_image | image_url }}" alt="{{ product.selected_or_first_available_variant.featured_image.alt }}" {% if lazy %}lazy="loading"{% endif %} data-addons-img--{{ forloop.index }}>
                            {% elsif use_variants and product.featured_image != blank  %}
                              <img src="{{ product.featured_image | image_url }}" alt="{{ product.featured_image.alt }}" {% if lazy %}lazy="loading"{% endif %} data-addons-img--{{ forloop.index }}>
                            {% endif %}
  
                            {% if use_variants == false and product.featured_image != blank %}
                              <img src="{{ product.featured_image | image_url }}" alt="{{ product.featured_image.alt }}" {% if lazy %}lazy="loading"{% endif %} data-addons-img--{{ forloop.index }}>
                            {% endif %}
    
                            {% if link != blank %}
                              <p class="addons-link-{{ section.id }}">{{ link }}</p>
                            {% endif %}
                          </a>
                        {% endif %}
      
                        <div class="addons-content-{{ section.id }}">
    
                          <div class="addons-info-{{ section.id }}">
    
                            <p class="addons-title-{{ section.id }}">{{ product.title }}</p>
                            
                            <div class="addons-price-{{ section.id }}">
                              <p data-addons-price--{{ forloop.index }} class="addons-price-value-{{ section.id }}">{{ product.price | money }}</p>
                              {% if badge != blank %}
                                <p data-addons-badge--{{ forloop.index }} class="addons-badge-{{ section.id }}" style="background-color: {{ badge_bg_color }}; color: {{ badge_color }};">{{ badge }}</p>
                              {% endif %}
                            </div>
  
                            {% if use_variants %}
                              <select
                                class="addons-select-{{ section.id }}"
                                {% if product.variants.size < 2 %}
                                style="display: none;"
                                {% endif %}
                                data-addons-variant-select--{{ forloop.index }}
                              >
                                {% for variant in product.variants %}
                                  <option value="{{ variant.id }}">{{ variant.title }}</option>
                                {% endfor %}
                              </select>
                            {% endif %}
                            
                          </div>
    
                          <input data-addons-input--{{ forloop.index }} type="checkbox" class="addons-input-{{ section.id }} addons-input-{{ section.id }}-{{ forloop.index }}" id="addons-input-{{ product.id }}{{ forloop.index }}" value="{{ product.selected_or_first_available_variant.id }}" name="addons-input-{{ product.id }}{{ forloop.index }}">
                          <label data-addons-label--{{ forloop.index }} for="addons-input-{{ product.id }}{{ forloop.index }}" id="addons-label-{{ product.id }}{{ forloop.index }}" class="addons-label-{{ section.id }} addons-label-{{ section.id }}-{{ forloop.index }}"><span class="addons-toggler-{{ section.id }}"></span></label>
                        </div>
                      
                      </div>
              
                  {% endfor %}
                {% endif %}
              {% else %}
                {% if section.blocks.size > 0 %}
                  {% for block in section.blocks %}
                    {% if block.settings.product != blank %}
                      <div class="addons-slide-{{ section.id }} addons-slide-{{ block.id }} swiper-slide">
                        
                        {% if block.settings.product.featured_image != blank or block.settings.image != blank %}
                          <a href="{{ block.settings.product.url }}" class="addons-image-{{ section.id }}">
                            {% if block.settings.image != blank %}
                              <img src="{{ block.settings.image | image_url }}" alt="{{ block.settings.image.alt }}" {% if lazy %}lazy="loading"{% endif %} data-addons-img--{{ forloop.index }}>
                            {% else %}
                              {% if use_variants and block.settings.product.selected_or_first_available_variant.featured_image != blank %}
                                <img src="{{ block.settings.product.selected_or_first_available_variant.featured_image | image_url }}" alt="{{ block.settings.product.selected_or_first_available_variant.featured_image.alt }}" {% if lazy %}lazy="loading"{% endif %} data-addons-img--{{ forloop.index }}>
                              {% elsif block.settings.product.featured_image != blank %}
                                <img src="{{ block.settings.product.featured_image | image_url }}" alt="{{ block.settings.product.featured_image.alt }}" {% if lazy %}lazy="loading"{% endif %} data-addons-img--{{ forloop.index }}>
                              {% endif %}
                            {% endif %}
    
                            {% if block.settings.link != blank %}
                              <p class="addons-link-{{ section.id }}">{{ block.settings.link }}</p>
                            {% endif %}
                          </a>
                        {% endif %}
      
                        <div class="addons-content-{{ section.id }}">
    
                          <div class="addons-info-{{ section.id }}">
    
                            <p class="addons-title-{{ section.id }}">{{ block.settings.product.title }}</p>
                            
                            <div class="addons-price-{{ section.id }}">
                              <p data-addons-price--{{ forloop.index }} class="addons-price-value-{{ section.id }}">{{ block.settings.product.price | money }}</p>
                              {% if block.settings.badge != blank %}
                                <p data-addons-badge--{{ forloop.index }} class="addons-badge-{{ section.id }}" style="background-color: {{ block.settings.badge_bg_color }}; color: {{ block.settings.badge_color }};">{{ block.settings.badge }}</p>
                              {% endif %}
                            </div>
  
                            {% if use_variants %}
                              <select
                                class="addons-select-{{ section.id }}"
                                data-addons-variant-select--{{ forloop.index }}
                                {% if block.settings.product.variants.size < 2 %}
                                style="display: none;"
                                {% endif %}
                              >
                                {% for variant in block.settings.product.variants %}
                                  <option value="{{ variant.id }}">{{ variant.title }}</option>
                                {% endfor %}
                              </select>
                            {% endif %}
                            
                          </div>
    
                          <input data-addons-input--{{ forloop.index }} type="checkbox" class="addons-input-{{ section.id }} addons-input-{{ section.id }}{{ forloop.index }}" id="addons-input-{{ block.settings.product.id }}{{ forloop.index }}" value="{{ block.settings.product.selected_or_first_available_variant.id }}" name="addons-input-{{ block.settings.product.id }}{{ forloop.index }}">
                          <label data-addons-label--{{ forloop.index }} for="addons-input-{{ block.settings.product.id }}{{ forloop.index }}" class="addons-label-{{ section.id }} addons-label-{{ section.id }}{{ forloop.index }}"><span class="addons-toggler-{{ section.id }}"></span></label>
                        </div>
  
                      
                      </div>
                    {% endif %}
                  {% endfor %}
                {% endif %}
              {% endif %}
            </div>
          </div>
          <div class="addons-navigation-{{ section.id }}">
            {% if use_metafield %}
              {% assign products = product.metafields.custom.addons_products_2 | split: ',' %}
              {% if products != blank and products.size > 1 %}
                <div class="addons-pagination-{{ section.id }} swiper-pagination"></div>
              {% endif %}
            {% else %}
              {% if section.blocks.size > 1 %}
                <div class="addons-pagination-{{ section.id }} swiper-pagination"></div>
              {% endif %}
            {% endif %}
            <div class="addons-btns-{{ section.id }}">
              {% if use_metafield %}
                {% assign products = product.metafields.custom.addons_products_2 | split: ',' %}
                {% if products != blank and products.size > 1 %}
                  <div class="addons-btn-prev-{{ section.id }}">
                    <svg viewBox="0 0 100 100"><path d="M 10,50 L 60,100 L 70,90 L 30,50  L 70,10 L 60,0 Z"></path></svg>
                  </div>
                  <div class="addons-btn-next-{{ section.id }}">
                    <svg viewBox="0 0 100 100"><path d="M 10,50 L 60,100 L 70,90 L 30,50  L 70,10 L 60,0 Z"></path></svg>
                  </div>
                {% endif %}
              {% else %}
                {% if section.blocks.size > 1 %}
                  <div class="addons-btn-prev-{{ section.id }}">
                    <svg viewBox="0 0 100 100"><path d="M 10,50 L 60,100 L 70,90 L 30,50  L 70,10 L 60,0 Z"></path></svg>
                  </div>
                  <div class="addons-btn-next-{{ section.id }}">
                    <svg viewBox="0 0 100 100"><path d="M 10,50 L 60,100 L 70,90 L 30,50  L 70,10 L 60,0 Z"></path></svg>
                  </div>
                {% endif %}
              {% endif %}
            </div>
          </div>
        </div>
      </div>
    </div>
</template>

<script src="https://cdn.jsdelivr.net/npm/swiper@8.4.7/swiper-bundle.min.js"></script>

<script>
  
  function initProductAddons2() {
    var formayMoneyForBuyItWith = function(cents, format) {
      if (typeof cents == 'string') { cents = cents.replace('.',''); }
      var value = '';
      var placeholderRegex = /\{\{\s*(\w+)\s*\}\}/;
      var formatString = (format || this.money_format);
    
      function defaultOption(opt, def) {
         return (typeof opt == 'undefined' ? def : opt);
      }
    
      function formatWithDelimiters(number, precision, thousands, decimal) {
        precision = defaultOption(precision, 2);
        thousands = defaultOption(thousands, ',');
        decimal   = defaultOption(decimal, '.');
    
        if (isNaN(number) || number == null) { return 0; }
    
        number = (number/100.0).toFixed(precision);
    
        var parts   = number.split('.'),
            dollars = parts[0].replace(/(\d)(?=(\d\d\d)+(?!\d))/g, '$1' + thousands),
            cents   = parts[1] ? (decimal + parts[1]) : '';
    
        return dollars + cents;
      }
    
      switch(formatString.match(placeholderRegex)[1]) {
        case 'amount':
          value = formatWithDelimiters(cents, 2);
          break;
        case 'amount_no_decimals':
          value = formatWithDelimiters(cents, 0);
          break;
        case 'amount_with_comma_separator':
          value = formatWithDelimiters(cents, 2, '.', ',');
          break;
        case 'amount_no_decimals_with_comma_separator':
          value = formatWithDelimiters(cents, 0, '.', ',');
          break;
      }
    
      return formatString.replace(placeholderRegex, value);
    };
    
    setTimeout(() => {
      const slider = new Swiper('.addons-slider-{{ section.id }}', {
        speed: 300,
        slidesPerView: 'auto',
        navigation: {
          nextEl: '.addons-btn-next-{{ section.id }}',
          prevEl: '.addons-btn-prev-{{ section.id }}'
        },
        pagination: {
          el: '.addons-pagination-{{ section.id }}',
          type: 'bullets',
          clickable: true
        }
      })
      slider.on('slideChange', function () {
        document.querySelectorAll('.addons-input-{{ section.id }}').forEach(el => {
          el.style.zIndex = "-2";
        })
      });
      
    }, 500);

    
    {% if use_metafield %}

    {% assign products = product.metafields.custom.addons_products_2.value %}
      {% if products != blank %}
        {% for product in products %}

          setTimeout(() => {
      
            document.querySelector('#addons-input-{{ product.id }}{{ forloop.index }}').addEventListener('change', () => {
              let value = document.querySelector('#addons-input-{{ product.id }}{{ forloop.index }}').value;
              var productIdInput = document.createElement('input');
              productIdInput.type = 'hidden';
              productIdInput.name = 'items[' + {{ forloop.index0 }} + '][id]';
              productIdInput.value = value;
    
              var quantityInput = document.createElement('input');
              quantityInput.type = 'hidden';
              quantityInput.name = 'items[' + {{ forloop.index0 }} + '][quantity]';
              quantityInput.value = '1';
              quantityInput.id = value;
    
             if(document.querySelector('#addons-input-{{ product.id }}{{ forloop.index }}').checked) {
    
               if(document.querySelector('.product-form form') ) {
                 document.querySelector('.product-form form').appendChild(productIdInput); 
                } else if(document.querySelector('form[action="/cart/add"][enctype="multipart/form-data"]')) {
                  document.querySelector('form[action="/cart/add"][enctype="multipart/form-data"]').appendChild(productIdInput);
                } else {
                  {% if form_class != blank %}
                    if(document.querySelector('.{{ form_class }}')) {
                      document.querySelector('.{{ form_class }}').appendChild(productIdInput);
                    }
                  {% endif %}
                }
    
               if(document.querySelector('.product-form form')){
                 document.querySelector('.product-form form').appendChild(quantityInput); 
                } else if(document.querySelector('form[action="/cart/add"][enctype="multipart/form-data"]')) {
                  document.querySelector('form[action="/cart/add"][enctype="multipart/form-data"]').appendChild(productIdInput);
                } else {
                  {% if form_class != blank %}
                    if(document.querySelector('.{{ form_class }}')) {
                      document.querySelector('.{{ form_class }}').appendChild(quantityInput);
                    }
                  {% endif %}
                }
               
             } else {
      
                if(document.querySelector(`input[name="items[{{forloop.index0}}][quantity]"][id="${value}"]`)) {
                  document.querySelector(`input[name="items[{{forloop.index0}}][quantity]"][id="${value}"]`).parentNode.removeChild(document.querySelector(`input[name="items[{{forloop.index0}}][quantity]"][id="${value}"]`));
                }
      
                if(document.querySelector(`input[name="items[{{forloop.index0}}][id]"][value="${value}"]`)) {
                  document.querySelector(`input[name="items[{{forloop.index0}}][id]"][value="${value}"]`).parentNode.removeChild(document.querySelector(`input[name="items[{{forloop.index0}}][id]"][value="${value}"]`));
                }
                
              }
              
            });

            let select{{ forloop.index }} = document.querySelector('[data-addons-variant-select--{{ forloop.index }}]');
            let product{{ forloop.index }} = {{ all_products[product.handle] | json }};
            let input{{ forloop.index }} = document.querySelector('[data-addons-input--{{ forloop.index }}]');
            let badge{{ forloop.index }} = document.querySelector('[data-addons-badge--{{ forloop.index }}]');
            let label{{ forloop.index }} = document.querySelector('[data-addons-label--{{ forloop.index }}]');
            let priceElement{{ forloop.index }} = document.querySelector('[data-addons-price--{{ forloop.index }}]');

            let previousVariant{{ forloop.index }};
  
            select{{ forloop.index }}.addEventListener('change', (e) => {
              const variantId = select{{ forloop.index }}.value;
              input{{ forloop.index }}.value = variantId;

              if(document.querySelector(`input[type="hidden"][name="items[0][id]"][value="${previousVariant{{ forloop.index }}}"]`)) {
                document.querySelector(`input[type="hidden"][name="items[0][id]"][value="${previousVariant{{ forloop.index }}}"]`).value = variantId;
              }

              if(document.querySelector(`input[type="hidden"][name="items[0][quantity]"][id="${previousVariant{{ forloop.index }}}"]`)) {
                document.querySelector(`input[type="hidden"][name="items[0][quantity]"][id="${previousVariant{{ forloop.index }}}"]`).id = variantId;
              }
          
              var selectedOptionId = select{{ forloop.index }}.value;
              var matchedVariant = product{{ forloop.index }}.variants.find(variant => variant.id == selectedOptionId);
          
              if (matchedVariant.featured_image) {
                document.querySelector('[data-addons-img--{{ forloop.index }}]').src = matchedVariant.featured_image.src;
              } else {
                document.querySelector('[data-addons-img--{{ forloop.index }}]').src = product{{ forloop.index }}.featured_image;
              }
          
              if (!matchedVariant.available) {
                input{{ forloop.index }}.setAttribute('disabled', "");
                badge{{ forloop.index }}.innerText = "{{ soldout }}";
                label{{ forloop.index }}.style.cursor = "not-allowed";
              } else {
                input{{ forloop.index }}.removeAttribute('disabled');
                badge{{ forloop.index }}.innerText = '{{ badge }}';
                label{{ forloop.index }}.style.cursor = "pointer";
              }
          
              let price{{ forloop.index}} = matchedVariant.price;
              priceElement{{ forloop.index }}.innerText = formayMoneyForBuyItWith(price{{ forloop.index}}, "{{ shop.money_format }}");

              previousVariant{{ forloop.index }} = variantId;
            });
              
            }, 500);
        {% endfor %}
      {% endif %}
    
    {% else %}
      
      {% if section.blocks.size > 0 %}
        {% for block in section.blocks %}
  
          setTimeout(() => {
  
          document.querySelector('#addons-input-{{ block.settings.product.id }}{{ forloop.index }}').addEventListener('change', () => {
            let value = document.querySelector('#addons-input-{{ block.settings.product.id }}{{ forloop.index }}').value;
            var productIdInput = document.createElement('input');
            productIdInput.type = 'hidden';
            productIdInput.name = 'items[' + {{ forloop.index0 }} + '][id]';
            productIdInput.value = document.querySelector('#addons-input-{{ block.settings.product.id }}{{ forloop.index }}').value;
  
            var quantityInput = document.createElement('input');
            quantityInput.type = 'hidden';
            quantityInput.name = 'items[' + {{ forloop.index0 }} + '][quantity]';
            quantityInput.value = '1';
            quantityInput.id = document.querySelector('#addons-input-{{ block.settings.product.id }}{{ forloop.index }}').value;
  
           if(document.querySelector('#addons-input-{{ block.settings.product.id }}{{ forloop.index }}').checked) {
  
             if(document.querySelector('.product-form form') ) {
               document.querySelector('.product-form form').appendChild(productIdInput); 
              } else if(document.querySelector('form[action="/cart/add"][enctype="multipart/form-data"]')) {
                document.querySelector('form[action="/cart/add"][enctype="multipart/form-data"]').appendChild(productIdInput);
              } else {
                {% if form_class != blank %}
                  if(document.querySelector('.{{ form_class }}')) {
                    document.querySelector('.{{ form_class }}').appendChild(productIdInput);
                  }
                {% endif %}
              }
  
             if(document.querySelector('.product-form form')){
               document.querySelector('.product-form form').appendChild(quantityInput); 
              } else if(document.querySelector('form[action="/cart/add"][enctype="multipart/form-data"]')) {
                document.querySelector('form[action="/cart/add"][enctype="multipart/form-data"]').appendChild(productIdInput);
              } else {
                {% if form_class != blank %}
                  if(document.querySelector('.{{ form_class }}')) {
                    document.querySelector('.{{ form_class }}').appendChild(quantityInput);
                  }
                {% endif %}
              }
             
           } else {
    
              if(document.querySelector(`input[name="items[{{forloop.index0}}][quantity]"][id="${value}"]`)) {
                document.querySelector(`input[name="items[{{forloop.index0}}][quantity]"][id="${value}"]`).parentNode.removeChild(document.querySelector(`input[name="items[{{forloop.index0}}][quantity]"][id="${value}"]`));
              }
    
              if(document.querySelector(`input[name="items[{{forloop.index0}}][id]"][value="${value}"]`)) {
                document.querySelector(`input[name="items[{{forloop.index0}}][id]"][value="${value}"]`).parentNode.removeChild(document.querySelector(`input[name="items[{{forloop.index0}}][id]"][value="${value}"]`));
              }
              
            }
            
          });

          let select{{ forloop.index }} = document.querySelector('[data-addons-variant-select--{{ forloop.index }}]');
          let product{{ forloop.index }} = {{ all_products[block.settings.product] | json }};
          let input{{ forloop.index }} = document.querySelector('[data-addons-input--{{ forloop.index }}]');
          let badge{{ forloop.index }} = document.querySelector('[data-addons-badge--{{ forloop.index }}]');
          let label{{ forloop.index }} = document.querySelector('[data-addons-label--{{ forloop.index }}]');
          let priceElement{{ forloop.index }} = document.querySelector('[data-addons-price--{{ forloop.index }}]');

          let previousVariant{{ forloop.index }};

          select{{ forloop.index }}.addEventListener('change', (e) => {
            const variantId = select{{ forloop.index }}.value;
            input{{ forloop.index }}.value = variantId;

            if(document.querySelector(`input[type="hidden"][name="items[0][id]"][value="${previousVariant{{ forloop.index }}}"]`)) {
              document.querySelector(`input[type="hidden"][name="items[0][id]"][value="${previousVariant{{ forloop.index }}}"]`).value = variantId;
            }

            if(document.querySelector(`input[type="hidden"][name="items[0][quantity]"][id="${previousVariant{{ forloop.index }}}"]`)) {
              document.querySelector(`input[type="hidden"][name="items[0][quantity]"][id="${previousVariant{{ forloop.index }}}"]`).id = variantId;
            }
        
            var selectedOptionId = select{{ forloop.index }}.value;
            var matchedVariant = product{{ forloop.index }}.variants.find(variant => variant.id == selectedOptionId);
        
            if (matchedVariant.featured_image) {
              document.querySelector('[data-addons-img--{{ forloop.index }}]').src = matchedVariant.featured_image.src;
            } else {
              document.querySelector('[data-addons-img--{{ forloop.index }}]').src = product{{ forloop.index }}.featured_image;
            }
        
            if (!matchedVariant.available) {
              input{{ forloop.index }}.setAttribute('disabled', "");
              badge{{ forloop.index }}.innerText = "{{ soldout }}";
              label{{ forloop.index }}.style.cursor = "not-allowed";
            } else {
              input{{ forloop.index }}.removeAttribute('disabled');
              badge{{ forloop.index }}.innerText = '{{ block.settings.badge }}';
              label{{ forloop.index }}.style.cursor = "pointer";
            }
        
            let price{{ forloop.index}} = matchedVariant.price;
            priceElement{{ forloop.index }}.innerHTML = formayMoneyForBuyItWith(price{{ forloop.index}}, "{{ shop.money_format }}");

            previousVariant{{ forloop.index }} = variantId;
          });
            
          }, 500);
          
        {% endfor %}
      {% endif %}
    {% endif %}
    
  }

  document.addEventListener('DOMContentLoaded', initProductAddons2);
  
  if (Shopify.designMode) {
     document.addEventListener('shopify:section:unload', initProductAddons2);
     document.addEventListener('shopify:section:load', initProductAddons2);
  }
  
</script>

{% schema %}
  {
    "name": "SS - Product Addons #2",
    "settings": [
      {
        "type": "header",
        "content":"Save settings to see section in action"
      },
      {
        "type": "header",
        "content":"Default placement is below buy buttons",
        "info": "To change placement - Copy this code: <div id='ss-addons'></div> - Click 'Add block' -> Custom Liquid/HTML -> Paste."
      },
      {
        "type": "select",
        "id": "addons_position",
        "label": "Addons Position",
        "default": "below_buy",
        "options": [
          {
            "label": "Above Buy Buttons",
            "value": "above_buy"
          },
          {
            "label": "Below Buy Buttons",
            "value": "below_buy"
          },
          {
            "label": "Above Product Title",
            "value": "above_title"
          },
          {
            "label": "Below Product Title",
            "value": "below_title"
          },
          {
            "label": "Below Product Description",
            "value": "below_description"
          }
        ]
      },
      {
        "type": "checkbox",
        "id": "use_metafield",
        "label": "Use Metafield",
        "info": "Name the metafield 'Addons Products 2'."
      },
      {
        "type": "checkbox",
        "id": "use_variants",
        "label": "Use Variants Dropdown",
        "default": true
      },
      {
        "type": "text",
        "id": "link",
        "label": "Link for Products from Metafields",
        "default": "Learn More"
      },
      {
        "type": "text",
        "id": "badge",
        "label": "Badge Text for Products from Metafields",
        "default": "Limited Time"
      },
      {
        "type": "text",
        "id": "soldout",
        "label": "Soldout Text",
        "default": "Sold Out"
      },
      {
        "type": "header",
        "content": "Addons Slide Settings"
      },
      {
        "type": "range",
        "id": "slide_radius",
        "min": 0,
        "max": 100,
        "step": 2,
        "unit": "px",
        "label": "Addons Slide Border Radius",
        "default": 0
      },
      {
        "type": "range",
        "id": "slide_border_thickness",
        "min": 0,
        "max": 10,
        "step": 1,
        "unit": "px",
        "label": "Addons Slide Border Thickness",
        "default": 2
      },
      {
        "type": "header",
        "content": "Addons Image Settings"
      },
      {
        "type": "range",
        "id": "image_size",
        "min": 30,
        "max": 200,
        "step": 2,
        "unit": "px",
        "label": "Addons Image Size",
        "default": 86
      },
      {
        "type": "range",
        "id": "image_size_mobile",
        "min": 30,
        "max": 200,
        "step": 2,
        "unit": "px",
        "label": "Addons Image Size - Mobile",
        "default": 150
      },
      {
        "type": "range",
        "id": "image_border_thickness",
        "min": 0,
        "max": 10,
        "step": 1,
        "unit": "px",
        "label": "Addons Image Border Thickness",
        "default": 2
      },
      {
        "type": "range",
        "id": "image_padding_bottom",
        "min": 0,
        "max": 30,
        "step": 2,
        "unit": "px",
        "label": "Addons Padding Bottom",
        "default": 10
      },
      {
        "type": "header",
        "content": "Addons Content Settings"
      },
      {
        "type": "range",
        "id": "content_padding_horizontal",
        "min": 0,
        "max": 100,
        "step": 2,
        "unit": "px",
        "label": "Addons Content Padding sides",
        "default": 20
      },
      {
        "type": "range",
        "id": "content_padding_horizontal_mobile",
        "min": 0,
        "max": 100,
        "step": 2,
        "unit": "px",
        "label": "Addons Content Padding Horizontal - Mobile",
        "default": 20
      },
      {
        "type": "range",
        "id": "content_padding_vertical",
        "min": 0,
        "max": 100,
        "step": 2,
        "unit": "px",
        "label": "Addons Content Padding Vertical",
        "default": 20
      },
      {
        "type": "range",
        "id": "content_padding_vertical_mobile",
        "min": 0,
        "max": 100,
        "step": 2,
        "unit": "px",
        "label": "Addons Content Padding Vertical - Mobile",
        "default": 10
      },
      {
        "type": "header",
        "content": "Addons Product Heading"
      },
      {
        "type": "checkbox",
        "id": "product_heading_custom",
        "label": "Use Custom Font",
        "default": false
      },
      {
        "type": "font_picker",
        "id": "product_heading_font",
        "label": "Heading Font Family",
        "default": "assistant_n4"
      },
      {
        "type": "range",
        "id": "product_heading_size",
        "min": 0,
        "max": 72,
        "step": 2,
        "unit": "px",
        "label": "Heading Size",
        "default": 18
      },
      {
        "type": "range",
        "id": "product_heading_size_mobile",
        "min": 0,
        "max": 72,
        "step": 2,
        "unit": "px",
        "label": "Heading Size - Mobile",
        "default": 18
      },
      {
        "type": "range",
        "id": "product_heading_height",
        "min": 50,
        "max": 200,
        "step": 10,
        "unit": "%",
        "label": "Heading Line Height",
        "default": 100
      },
      {
        "type": "header",
        "content": "Addons Product Price"
      },
      {
        "type": "checkbox",
        "id": "product_price_custom",
        "label": "Use Custom Font",
        "default": false
      },
      {
        "type": "font_picker",
        "id": "product_price_font",
        "label": "Price Font Family",
        "default": "assistant_n4"
      },
      {
        "type": "range",
        "id": "product_price_size",
        "min": 0,
        "max": 50,
        "step": 1,
        "unit": "px",
        "label": "Price Size",
        "default": 17
      },
      {
        "type": "range",
        "id": "product_price_size_mobile",
        "min": 0,
        "max": 50,
        "step": 1,
        "unit": "px",
        "label": "Price Size Mobile",
        "default": 17
      },
      {
        "type": "range",
        "id": "product_price_height",
        "min": 50,
        "max": 200,
        "step": 10,
        "unit": "%",
        "label": "Price Line Height",
        "default": 100
      },
      {
        "type": "range",
        "id": "product_price_mt",
        "min": 0,
        "max": 50,
        "step": 2,
        "unit": "px",
        "label": "Price Margin Top",
        "default": 8
      },
      {
        "type": "header",
        "content": "Addons Product Badge"
      },
      {
        "type": "range",
        "id": "product_badge_padding_horizontal",
        "min": 0,
        "max": 100,
        "step": 2,
        "unit": "px",
        "label": "Addons Product Badge Padding sides",
        "default": 10
      },
      {
        "type": "range",
        "id": "product_badge_padding_vertical",
        "min": 0,
        "max": 100,
        "step": 2,
        "unit": "px",
        "label": "Addons Product Badge Padding Vertical",
        "default": 4
      },
      {
        "type": "range",
        "id": "product_badge_radius",
        "min": 0,
        "max": 40,
        "step": 2,
        "unit": "px",
        "label": "Addons Product Badge Border Radius",
        "default": 0
      },
      {
        "type": "checkbox",
        "id": "product_badge_custom",
        "label": "Use Custom Font",
        "default": false
      },
      {
        "type": "font_picker",
        "id": "product_badge_font",
        "label": "Badge Font Family",
        "default": "assistant_n4"
      },
      {
        "type": "range",
        "id": "product_badge_size",
        "min": 0,
        "max": 50,
        "step": 1,
        "unit": "px",
        "label": "Badge Size",
        "default": 11
      },
      {
        "type": "range",
        "id": "product_badge_size_mobile",
        "min": 0,
        "max": 50,
        "step": 1,
        "unit": "px",
        "label": "Badge Size Mobile",
        "default": 11
      },
      {
        "type": "range",
        "id": "product_badge_height",
        "min": 50,
        "max": 200,
        "step": 10,
        "unit": "%",
        "label": "Badge Line Height",
        "default": 100
      },
      {
        "type": "header",
        "content": "Addons Product Link"
      },
      {
        "type": "checkbox",
        "id": "product_link_custom",
        "label": "Use Custom Font",
        "default": false
      },
      {
        "type": "font_picker",
        "id": "product_link_font",
        "label": "Link Font Family",
        "default": "assistant_n4"
      },
      {
        "type": "range",
        "id": "product_link_size",
        "min": 0,
        "max": 50,
        "step": 1,
        "unit": "px",
        "label": "Link Size",
        "default": 8
      },
      {
        "type": "range",
        "id": "product_link_size_mobile",
        "min": 0,
        "max": 50,
        "step": 1,
        "unit": "px",
        "label": "Link Size Mobile",
        "default": 8
      },
      {
        "type": "range",
        "id": "product_link_height",
        "min": 50,
        "max": 200,
        "step": 10,
        "unit": "%",
        "label": "Link Line Height",
        "default": 100
      },
      {
        "type": "header",
        "content": "Navigation Settings"
      },
      {
        "type": "range",
        "id": "navigation_mt",
        "min": 0,
        "max": 100,
        "step": 2,
        "unit": "px",
        "label": "Navigation Margin Top",
        "default": 16
      },
      {
        "type": "header",
        "content": "Arrow Settings"
      },
      {
        "type": "range",
        "id": "arrow_size",
        "min": 10,
        "max": 100,
        "step": 2,
        "unit": "px",
        "label": "Arrow Size",
        "default": 16
      },
      {
        "type": "range",
        "id": "arrow_size_mobile",
        "min": 10,
        "max": 100,
        "step": 2,
        "unit": "px",
        "label": "Arrow Size - Mobile",
        "default": 16
      },
      {
        "type": "range",
        "id": "arrow_icon_size",
        "min": 10,
        "max": 50,
        "step": 2,
        "unit": "px",
        "label": "Arrow Icon Size",
        "default": 16
      },
      {
        "type": "range",
        "id": "arrow_icon_size_mobile",
        "min": 10,
        "max": 50,
        "step": 2,
        "unit": "px",
        "label": "Arrow Icon Size - Mobile",
        "default": 16
      },
      {
        "type": "range",
        "id": "arrow_border_thickness",
        "min": 0,
        "max": 10,
        "step": 1,
        "unit": "px",
        "label": "Arrow Border Thickness",
        "default": 0
      },
      {
        "type": "checkbox",
        "id": "arrow_show_desktop",
        "label": "Show on Desktop",
        "default": true
      },
      {
        "type": "checkbox",
        "id": "arrow_show_mobile",
        "label": "Show on Mobile",
        "default": true
      },
      {
        "type": "header",
        "content": "Dots Settings"
      },
      {
        "type": "range",
        "id": "dots_size",
        "min": 5,
        "max": 40,
        "step": 1,
        "unit": "px",
        "label": "Dots Size",
        "default": 12
      },
      {
        "type": "range",
        "id": "dots_size_mobile",
        "min": 5,
        "max": 40,
        "step": 1,
        "unit": "px",
        "label": "Dots Size - Mobile",
        "default": 12
      },
      {
        "type": "checkbox",
        "id": "dots_show_desktop",
        "label": "Show on Desktop",
        "default": true
      },
      {
        "type": "checkbox",
        "id": "dots_show_mobile",
        "label": "Show on Mobile",
        "default": true
      },
      {
        "type": "header",
        "content": "Addons Slide Colors"
      },
      {
        "type": "color",
        "label": "Addons Slide Background Color",
        "id": "slide_bg_color"
      },
      {
        "type": "color",
        "label": "Addons Slide Border Color",
        "id": "slide_border_color",
        "default": "#D7D6D1"
      },
      {
        "type": "color",
        "label": "Addons Image Border Color",
        "id": "image_border_color",
        "default": "#D7D6D1"
      },
      {
        "type": "color",
        "label": "Addons Content Background Color",
        "id": "content_bg_color",
        "default": "#AEAB9E"
      },
      {
        "type": "color",
        "label": "Addons Product Heading Color",
        "id": "product_heading_color",
        "default": "#FFFFFF"
      },
      {
        "type": "color",
        "label": "Addons Product Price Color",
        "id": "product_price_color",
        "default": "#FFFFFF"
      },
      {
        "type": "color",
        "label": "Addons Product Badge Background Color",
        "id": "badge_bg_color",
        "default": "#FF9D34",
        "info": "For products from Metafiel"
      },
      {
        "type": "color",
        "label": "Addons Product Badge Color",
        "id": "badge_color",
        "default": "#FFFFFF",
        "info": "For products from Metafiel"
      },
      {
        "type": "color",
        "label": "Addons Product Link Color",
        "id": "product_link_color",
        "default": "#827E6D"
      },
      {
        "type": "color",
        "label": "Addons Product Label Background Color",
        "id": "label_bg_color",
        "default": "#827E6D"
      },
      {
        "type": "color",
        "label": "Addons Product Label Active Background Color",
        "id": "label_active_bg_color",
        "default": "#FF9D34"
      },
      {
        "type": "header",
        "content": "Navigation Colors"
      },
      {
        "type": "color",
        "label": "Arrow color",
        "id": "arrow_color",
        "default": "#827E6D"
      },
      {
        "type": "color",
        "label": "Arrow Hover color",
        "id": "arrow_hover_color",
        "default": "#827E6D"
      },
      {
        "type": "color",
        "label": "Arrow Background color",
        "id": "arrow_bg_color",
        "default": "#FFFFFF"
      },
      {
        "type": "color",
        "label": "Arrow Background Hover color",
        "id": "arrow_bg_hover_color",
        "default": "#FFFFFF"
      },
      {
        "type": "color",
        "label": "Arrow Border color",
        "id": "arrow_border_color",
        "default": "#FFFFFF"
      },
      {
        "type": "color",
        "label": "Arrow Border Hover color",
        "id": "arrow_border_hover_color",
        "default": "#FFFFFF"
      },
      {
        "type": "color",
        "label": "Dots Color",
        "id": "dots_color",
        "default": "#827E6D"
      },
      {
        "type": "header",
        "content": "Section Colors"
      },
      {
        "type": "color",
        "label": "Section background",
        "id": "background_color",
        "default": "#FFFFFF"
      },
      {
        "type": "color_background",
        "id": "background_gradient",
        "label": "Section background gradient"
      },
      {
        "type": "color",
        "label": "Border",
        "id": "border_color",
        "default": "#000000"
      },
      {
        "type": "header",
        "content": "Section margin (outside)"
      },
      {
        "type": "range",
        "id": "margin_top",
        "min": 0,
        "max": 100,
        "step": 4,
        "unit": "px",
        "label": "Margin top",
        "default": 0
      },
      {
        "type": "range",
        "id": "margin_bottom",
        "min": 0,
        "max": 100,
        "step": 4,
        "unit": "px",
        "label": "Margin bottom",
        "default": 0
      },
      {
        "type": "header",
        "content": "Section padding (inside)"
      },
      {
        "type": "range",
        "id": "padding_top",
        "min": 0,
        "max": 100,
        "step": 4,
        "unit": "px",
        "label": "Padding top",
        "default": 0
      },
      {
         "type": "range",
         "id": "padding_bottom",
         "min": 0,
         "max": 100,
         "step": 4,
         "unit": "px",
         "label": "Padding bottom",
         "default": 12
      },
      {
        "type": "range",
        "id": "padding_horizontal",
        "min": 0,
        "max": 30,
        "step": 1,
        "unit": "rem",
        "label": "Padding sides",
        "default": 0
      },
      {
        "type": "range",
        "id": "padding_horizontal_mobile",
        "min": 0,
        "max": 15,
        "step": 0.5,
        "unit": "rem",
        "label": "Padding sides mobile",
        "default": 0
      },
      {
        "type": "header",
        "content": "Section Settings"
      },
      {
        "type": "range",
        "id": "border_thickness",
        "min": 0,
        "max": 50,
        "step": 1,
        "unit": "px",
        "label": "Border thickness",
        "default": 0
      },
      {
        "type": "checkbox",
        "id": "lazy",
        "label": "Lazy load",
        "info": "Lazy load images for speed optimisation",
        "default": true
      },
      {
        "type": "text",
        "label": "Form Class",
        "id": "form_class",
        "info": "Default form class is 'form'. Write this if your form have other class!"
      }
    ],
    "blocks": [
      {
        "type": "product",
        "name": "Product",
        "settings": [
          {
            "type": "product",
            "id": "product",
            "label": "Product"
          },
          {
            "type": "image_picker",
            "id": "image",
            "label": "Product Image",
            "info": "Replaces the main product image"
          },
          {
            "type": "text",
            "id": "badge",
            "label": "Product Badge",
            "default": "Limited Time"
          },
          {
            "type": "text",
            "id": "link",
            "label": "Product Link Text",
            "default": "Learn More"
          },
          {
            "type": "header",
            "content": "Product Colors"
          },
          {
            "type": "color",
            "label": "Product Badge Background Color",
            "id": "badge_bg_color",
            "default": "#FF9D34"
          },
          {
            "type": "color",
            "label": "Product Badge Color",
            "id": "badge_color",
            "default": "#FFFFFF"
          }
        ]
      }
    ],
    "presets": [
      {
        "name": "SS - Product Addons #2"
      }
    ]
  }
{% endschema %}